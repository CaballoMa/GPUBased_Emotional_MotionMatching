#include "/Engine/Public/Platform.ush"

RWStructuredBuffer<float> A;
RWStructuredBuffer<float> B;
RWStructuredBuffer<float> WeightsSqrt;
RWStructuredBuffer<float> PartialCosts;

[numthreads(THREADS_X, THREADS_Y, THREADS_Z)]
void ExampleComputeShader(uint3 DTid : SV_DispatchThreadID)
{
    int index = DTid.x * 4;

    if (index < 28)
    {
        float4 VA = float4(A[index], A[index + 1], A[index + 2], A[index + 3]);
        float4 VB = float4(B[index], B[index + 1], B[index + 2], B[index + 3]);
        float4 VW = float4(WeightsSqrt[index], WeightsSqrt[index + 1], WeightsSqrt[index + 2], WeightsSqrt[index + 3]);

        float4 Diff = VA - VB;
        float4 WeightedDiff = Diff * VW;
        float4 PartialCost = WeightedDiff * WeightedDiff;

        PartialCosts[DTid.x] = dot(PartialCost, float4(1, 1, 1, 1));
    }
}
